trigger:
  - master
pr:
  - master
variables:
  - template: pipeline/variables-common.yaml
- ${{ if eq(variables['env'], 'sbox') }}:
# Only run when dev has specifically requested sandbox
  - template: pipeline/variables-sbox.yaml
- ${{ if or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['env'], 'test')) }}:
    # Deploy PRs here or if specifically targetted
  - template: pipeline/variables-test.yaml
- ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['env'], 'sbox'), ne(variables['env'], 'test')) }}:
  - template: pipeline/variables-stg.yaml
- ${{ if and(eq(variables['Build.SourceBranch'], 'refs/heads/tags'), ne(variables['env'], 'sbox'), ne(variables['env'], 'test')) }}:
  - template: pipeline/variables-prod.yaml

stages:
  - stage: Build
    jobs:
      - job: BasicValidation
        steps:
          - template: pipeline/steps/tf-install.yaml
          - task: TerraformCLI@0
            inputs:
              command: 'init'
              commandOptions: '-backend=false'
          - task: TerraformCLI@0
            displayName: Validate Terraform
            inputs:
              command: 'validate'
              commandOptions: '-no-color'
          - script: terraform fmt -check=true
            displayName: Check Formatting

  - stage: Deploy
    dependsOn: Build
    jobs:
      - job: DeployToEnv
        steps:
          - template: pipeline/steps/tf-init.yaml
            parameters:
              subscriptionName: $(subscriptionName)
              product: $(product)
              locationEng: $(locationEng)
              location: $(location)
              env: $(env)
          - template: pipeline/steps/tf-plan.yaml
            parameters:
              subscriptionName: $(subscriptionName)
              env: $(env)
              envLong: $(envLong)
              location: $(location)
              product: $(product)
          - template: pipeline/steps/tf-apply.yaml
            parameters:
              subscriptionName: $(subscriptionName)
              env: $(env)