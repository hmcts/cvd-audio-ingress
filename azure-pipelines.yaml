trigger:
  - master
pr:
  - master
variables:
  locationEng: 'UK South'
  location: uksouth
  env: sbox
  stack: application
  service: 01-cvp-audio-ingress
  product: cvp
  dnsTenantId: oops
  dnsClientId: dummy
  dnsClientSecret: data
  dnsSubscriptionId: a8140a9e-f1b0-481f-a4de-09e2ee23f7ab
  addressSpace:
  common_tags:
    environment: $(env)
    '"Team Name"': cvp
    BuiltFrom: 'https://github.com/hmcts/cvp-audio-ingress'
  service_certificate_kv_url: foo
  service_certificate_thumbprint: foo
  key_vault_id: foo
  dns_zone_name: shared-services.uk.south.sbox.hmcts.internal
  dns_resource_group: shared-services_sbox_network_resource_group
  dns_tenant_id: oops
  dns_client_id: dummy
  dns_client_secret: data
  dns_subscription_id: a8140a9e-f1b0-481f-a4de-09e2ee23f7ab
  workspace_to_address_space_map:
    sbox: 10.50.11.0/28

steps:
  - task: TerraformInstaller@0
    displayName: Install Terraform
    inputs:
      terraformVersion: '0.12.24'
  - task: TerraformCLI@0
    inputs:
      command: 'init'
      commandOptions: '-backend=false'
  - task: TerraformCLI@0
    displayName: Validate Terraform
    inputs:
      command: 'validate'
      commandOptions: '-no-color'
  - script: terraform fmt -check=true
    displayName: Check Formatting

  - task: TerraformCLI@0
    inputs:
      command: 'init'
      backendType: 'azurerm'
      backendServiceArm: '$(subscriptionName)'
      ensureBackend: true
      backendAzureRmResourceGroupName: 'cvp-sbox-rg'
      backendAzureRmResourceGroupLocation: '$(location)'
      backendAzureRmStorageAccountName: 'cvpsboxterraform'
      backendAzureRmContainerName: 'terraform-state'
      backendAzureRmKey: '$(locationEng)/$(env)/$(stack)/$(service)/terraform.tfstate'
  - task: TerraformCLI@0
    displayName: Plan
    inputs:
      command: 'plan'
      environmentServiceName: $(subscriptionName)