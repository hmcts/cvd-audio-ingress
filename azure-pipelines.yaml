trigger:
  - master
pr:
  - master
variables:
  locationEng: coalesce(variables.locationEng, 'UK South')
  location: coalesce(variables.location, 'uksouth')
  env: coalesce(variables.env, 'sbox')
  envLong: coalesce(variables.envLong, 'sandbox')
  wowza_sku: 'linux-paid'
  wowza_version: '4.7.7'
  wowza_publisher: 'wowza'
  wowza_offer: 'wowzastreamingengine'

stages:
  - stage: Build
    jobs:
      - job: BasicValidation
        steps:
          - template: ./steps/tf-install.yaml
          - task: TerraformCLI@0
            inputs:
              command: 'init'
              commandOptions: '-backend=false'
          - task: TerraformCLI@0
            displayName: Validate Terraform
            inputs:
              command: 'validate'
              commandOptions: '-no-color'
          - script: terraform fmt -check=true
            displayName: Check Formatting

  - stage: Deploy
    dependsOn: Build
    variables:
      - ${{ if and(succeeded(), eq(variables['env'], 'sbox')) }}:
        # Only run when dev has specifically requested sandbox
        - template: pipeline/variables-sbox.yaml
      - ${{ if and(succeeded(), or(eq(variables['Build.Reason'], 'PullRequest'), eq(variables['env'], 'test'))) }}:
        # Deploy PRs here or if specifically targetted
        - template: pipeline/variables-test.yaml
      - ${{ if and(succeeded(), and(eq(variables['Build.SourceBranch'], 'refs/heads/master'), ne(variables['env'], 'sbox'), ne(variables['env'], 'test'))) }}:
        - template: pipeline/variables-stg.yaml
      - ${{ if and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/tags'), ne(variables['env'], 'sbox'), ne(variables['env'], 'test')) }}:
    jobs:
      - job: DeployToEnv
        displayName: 'Deploy to $(envLong)'
        steps:
          - template: ./steps/tf-init.yaml
            parameters:
              subscriptionName: $(subscriptionName)
              product: $(product)
              locationEng: $(locationEng)
              location: $(location)
              env: $(env)
          - template: ./steps/tf-plan.yaml
            parameters:
              subscriptionName: $(subscriptionName)
              env: $(env)
              envLong: $(envLong)
          - template: ./steps/tf-apply.yaml
            parameters:
              subscriptionName: $(subscriptionName)
              env: $(env)