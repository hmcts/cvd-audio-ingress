parameters:
  - name: dependsOnEnv
    type: string
    default: ''
  - name: condition
    type: string
    default: 'always()'

stages:
  - stage: Build
    condition: ${{ parameters.condition }}
    pool:
      vmImage: 'ubuntu-latest'
    variables:
      - template: ../variables/variables-common.yaml
    jobs:
      - job: privatelink
        steps:
          - task: AzureCLI@2
            name: 'vnetlink'
            displayName: Add Vnet Link
            inputs:
              azureSubscription: 'DTS-SHAREDSERVICES-SBOX'
              scriptType: 'pscore'
              scriptLocation: 'inlineScript'
              inlineScript: |
                $subscriptionName="DTS-CFTPTL-INTSVC"
                $subId=az account show -s $subscriptionName --query "id" -o tsv

                $resourceGroupName="core-infra-intsvc-rg"
                $location="Global"

                $privateDnsName="privatelink.blob.core.windows.net"

                $virtualNetworkLinkName="cvpsbox"

                $virtualNetworkName="cvp-recordings-sbox-vnet"
                $virtualNetworkRg="cvp-recordings-sbox-rg"
                $virtualNetworkId="$(az network vnet show -g $virtualNetworkRg -n $virtualNetworkName --query "id" -o tsv)"


                $body = [PSCustomObject]@{
                  location = $location
                  tags = @{
                    "application"  = "Cloud-Video-Platform"
                    "builtFrom"    = "hmcts/cvp-audio-ingress"
                    "businessArea" = "Cross-Cutting"
                    "criticality"  = "Low"
                    "environment"  = "sandbox"
                  }
                  properties = @{
                    virtualNetwork = @{
                      id = $virtualNetworkId
                    }
                    registrationEnabled = $false
                  }
                }


                $restUrl="https://management.azure.com/subscriptions/$subId/resourceGroups/$resourceGroupName/providers/Microsoft.Network/privateDnsZones/$privateDnsName/virtualNetworkLinks/$virtualNetworkLinkName`?api-version=2018-09-01"

                Write-Host "Request: $restUrl"
                $jsonBody = $body | ConvertTo-Json -Compress -Depth 100
                $jsonBody = $jsonBody -replace "`"","\`""
                Write-Host "Body: $jsonBody"

                $repsonse = az rest --method PUT --uri $restUrl --body $jsonBody --debug -o json | ConvertFrom-Json

                Write-Host $repsonse

                
      - job: BasicValidation
        steps:
          - template: ../steps/tf-install.yaml
          - template: ../steps/tf-init.yaml
            parameters:
              useBackend: false
          - template: templates/tests/terraform/allTests.yaml@azTemplates
            parameters:
              terraformPath: $(System.DefaultWorkingDirectory)