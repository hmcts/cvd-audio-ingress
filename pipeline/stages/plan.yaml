parameters:
  - name: env
    type: string
    default: 'sbox'
  - name: dependsOnEnv
    type: string
    default: ''
  - name: runStage
    type: string
    default: 'true'

stages:
  - ${{ if eq(parameters.runStage, true)}}:
  
    - stage: 'Plan${{parameters.env}}'
      displayName: 'Plan ${{parameters.env}}'
      ${{ if eq(parameters.dependsOnEnv, '') }}:
        dependsOn: Build
      ${{ if eq(parameters.dependsOnEnv, 'sbox') }}:
        dependsOn: 'Test${{parameters.dependsOnEnv}}'
      ${{ if eq(parameters.dependsOnEnv, 'stg') }}:
        dependsOn: 'Test${{parameters.dependsOnEnv}}'
      pool:
        vmImage: 'ubuntu-latest'
      condition: succeeded()
      variables:
        - template: ../variables/variables-common.yaml
        - template: ../variables/variables-${{parameters.env}}.yaml
        - group: cvp-${{parameters.env}}
      jobs:
                  
        - job: PlanToEnv${{parameters.env}}
          displayName: 'Plan to ${{parameters.env}}'
          steps:
            - template: ../steps/tf-install.yaml
            - template: ../steps/tf-init.yaml
              parameters:
                subscriptionName: ${{variables.subscriptionName}}
                env: ${{variables.env}}
                location: ${{variables.location}}
                locationEng: ${{variables.locationEng}}
                product: ${{variables.product}}
                useBackend: true
            
            - template: templates\Azure\Common\unlock-resource.yml@azTemplates
              parameters:
                subscriptionName:  ${{variables.subscriptionName}}
                resourceName: "${{variables.product}}recordings${{variables.env}}sa"
                resourceGroupName: "${{variables.product}}-recordings-${{variables.env}}-rg"
                lockName: "resource-sa"
                resourceType: "Microsoft.Storage/storageAccounts"
            - template: templates\Azure\Common\unlock-resource-group.yml@azTemplates
              parameters:
                subscriptionName:  ${{variables.subscriptionName}}
                resourceGroupName: "${{variables.product}}-recordings-${{variables.env}}-rg"
                lockName: "${{variables.env}}-lock"
            - template: templates\Azure\Common\unlock-resource-group.yml@azTemplates
              parameters:
                subscriptionName:  ${{variables.subscriptionName}}
                resourceGroupName: "managed-identities-${{variables.env}}-rg"
                lockName: "${{variables.env}}-lock"

            - template: ../steps/tf-plan.yaml
              parameters:
                subscriptionName: ${{variables.subscriptionName}}
                env: ${{variables.env}}
                location: ${{variables.location}}
                product: ${{variables.product}}
                builtFrom: $(Build.Repository.Name)
                # Manually passed in for use in scripts where resources are tagged
                businessArea: ${{variables.businessArea}}
                application: ${{variables.application}}

        - job: CertGen${{parameters.env}}
          displayName: 'Generate Certificate for ${{parameters.env}}'
          steps:
            - template: templates\Azure\Certificates\Request.yaml@azTemplates
              parameters:
                subscriptionName: ${{variables.subscriptionName}}
                product: "cvp"
                environment: ${{parameters.env}}
                domain: "${{ variables.dns }}"
                keyVaultName: "cvp-${{parameters.env}}-kv"

        - job: 'StartVM${{parameters.env}}'
          displayName: '${{parameters.env}} Turning Vm on'
          dependsOn: PlanToEnv${{parameters.env}}
          pool:
            vmImage: 'ubuntu-latest'
          variables:
            - template: ../variables/variables-${{parameters.env}}.yaml
            - group: cvp-${{parameters.env}}
          steps:
            - template: ../steps/start-stop-vm.yaml
              parameters:
                env: ${{parameters.env}}
                pipelineStart: true
                subscription: ${{variables.subscriptionName}}

        - ${{ if eq(variables.TURN_OFF_VM_POST_RUN, true) }}:
          - job: 'StopVM${{parameters.env}}'
            displayName: '${{parameters.env}} Turning Vm off'
            dependsOn: 'StartVM${{parameters.env}}'
            pool:
              vmImage: 'ubuntu-latest'
            variables:
              - template: ../variables/variables-${{parameters.env}}.yaml
              - group: cvp-${{parameters.env}}
            steps:
              - template: ../steps/start-stop-vm.yaml
                parameters:
                  env: ${{parameters.env}}
                  pipelineStart: false
                  subscription: ${{variables.subscriptionName}}