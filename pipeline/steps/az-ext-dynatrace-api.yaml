parameters:
  - name: subscription
    type: string
  - name: vmNames
    type: object
    default: []
  - name: vmRgName
    type: string
  - name: env
    type: string
    default: ''

steps:
  - task: AzureCLI@2
    displayName: Get Settings for Dynatrace Extension
    name: dynaSettings
    condition: always()
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |

        $dynatrace_tenant_id="$env:DYNATRACE_TENANT_ID"
        $dynatrace_host_group="$env:DYNATRACE_HOST_GROUP"
        $dynatrace_network_zone="$env:DYNATRACE_NETWORK_ZONE"
        $env = "${{ parameters.env }}"

        $infraKvName = "$env:INFRA_KV"
        $infraSecretName = "$env:DYNATRACE_TOKEN"
        Write-Host "Get Dynatrace env token from $infraKvName / $infraSecretName "
        $dynatrace_token=az keyvault secret show --id https://$infraKvName.vault.azure.net/secrets/$infraSecretName  --query "value" -o tsv

        $settings = [PSCustomObject]@{
          tenantId           = $dynatrace_tenant_id
          token              = $dynatrace_token
          hostGroup          = $dynatrace_host_group
          networkZone        = $dynatrace_network_zone
          enableLogAnalytics = "true"
          #installerArguments = "--loglevel=Verbose"
        }
        $settingsJson = $settings | ConvertTo-Json -Compress -Depth 100
        $settingsJson = $settingsJson -replace "`"", "\`""

        $protectedSettings = [PSCustomObject]@{}
        $protectedSettingsJson = $protectedSettings | ConvertTo-Json -Compress -Depth 100
        $protectedSettingsJson = $protectedSettingsJson -replace "`"", "\`""

        $dynatrace_token_display = $dynatrace_token -replace '[ -~]', "*"
        $settings.token = $dynatrace_token_display

        $environmentObj = [PSCustomObject]@{
            "sbox" = "sandbox"
            "stg"  = "staging"
            "prod" = "production"
        }
        
        if ( Test-Path variable:restApiPutBody2)
        { 
            Write-Host Cleared
            Clear-Variable -Name "restApiPutBody2"
        }

        $restApiPutBody2 =  [PSCustomObject]@{
            "location" = "uksouth"
            "properties" = [PSCustomObject]@{
                "publisher" = "dynatrace.ruxit"
                "type" = "oneAgentLinux"
                "autoUpgradeMinorVersion" = "true"
                "settings" = [PSCustomObject]@{
                    "tenantId"           = $settings.tenantId
                    "token"              = $settings.token
                    # "server"             = "$settings.networkZone"
                    "enableLogAnalytics" = $settings.enableLogAnalytics
                    "hostGroup"          = $settings.hostGroup
                }
            }
            "tags" = [PSCustomObject]@{
                application  = 'Cloud'
                BuiltFrom    = 'hmcts/cvp-audio-ingress'
                BusinessArea = 'Cross-Cutting'
                environment  = $environmentObj.$env
                Platform     = ''
                Video        = ''
            }    
        }
        $restApiPutBody2Json = $restApiPutBody2 | ConvertTo-Json -Compress -Depth 100
        $restApiPutBody2Json = $restApiPutBody2Json -replace "`"", "\`""
        # Write-Host "##vso[task.setvariable variable=settingsJson;isOutput=true]$settingsJson"
        # Write-Host $settings
        # Write-Host "##vso[task.setvariable variable=protectedSettingsJson;isOutput=true;issecret=true]$protectedSettingsJson"
        Write-Host "##vso[task.setvariable variable=restApiPutBody2Json;isOutput=true;issecret=false]$restApiPutBody2Json"
        Write-Host restApiPutBody2Json
        Write-Host $restApiPutBody2Json
        Write-Host settingsJson
        Write-Host $settingsJson
        

  - ${{ each vm in parameters.vmNames }}:
    - template: ./az-install-ext2.yaml
      parameters:
        subscription: ${{ parameters.subscription }}
        rgName: ${{ parameters.vmRgName }}
        vmName: ${{ vm }}
        extName: "oneAgentLinux"
        extPublisher: "dynatrace.ruxit"
        restApiPutBody2Json: $(omsSettings.restApiPutBody2Json)


