parameters:
  - name: subscription
    type: string
  - name: vmNames
    type: object
    default: []
  - name: vmRgName
    type: string
  - name: env
    type: string
    default: 'sbox'

steps:
  - task: AzureCLI@2
    displayName: Get Settings for OMS Extension
    name: omsSettings
    condition: always()
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $rgName="$env:WS_RG"
        $workspaceName="$env:WS_NAME"
        $workspaceSubscriptionName="$env:WS_SUB_NAME"
        $env = "${{ parameters.env }}"

        az account set -s $workspaceSubscriptionName

        $key=az monitor log-analytics workspace get-shared-keys --resource-group $rgName --workspace-name $workspaceName --query "primarySharedKey" -o tsv
        $id=az monitor log-analytics workspace show --resource-group $rgName --workspace-name $workspaceName -o tsv --query "customerId"

        Write-Host "ID: $id"

        $settings = [PSCustomObject]@{
          workspaceId           = $id
        }
        
        $settingsJson = $settings | ConvertTo-Json -Compress -Depth 100
        $settingsJson = $settingsJson -replace "`"", "\`""

        $protectedSettings = [PSCustomObject]@{
          workspaceKey           = $key
        }
        $protectedSettingsJson = $protectedSettings | ConvertTo-Json -Compress -Depth 100
        $protectedSettingsJson = $protectedSettingsJson -replace "`"", "\`""
                                                    
        $environmentObj = [PSCustomObject]@{
            "sbox" = "sandbox"
            "stg" = "staging"
            "prod" = "production"
        }
        $restApiPutBody = [PSCustomObject]@{
            "location" = "uksouth"
            "properties" = [PSCustomObject]@{
                    publisher = 'Microsoft.Azure.NetworkWatcher'
                    type = 'NetworkWatcherAgentLinux'
                    typeHandlerVersion = '1.4'
                    autoUpgradeMinorVersion = 'true'
            }
            "tags" = 
                [PSCustomObject]@{
                    application  = 'Cloud'
                    BuiltFrom    = 'hmcts/cvp-audio-ingress'
                    BusinessArea = 'Cross-Cutting'
                    environment  = $environmentObj.$env
                    Platform     = ''
                    Video        = ''
                }    
        }
        $restApiPutBodyJson = $restApiPutBody | ConvertTo-Json -Compress -Depth 100
        $restApiPutBodyJson = $restApiPutBodyJson -replace "`"", "\`""

        Write-Host "========"
        Write-Host "env: $env"
        Write-Host "$restApiPutBodyJson"
        Write-Host "========"

        Write-Host "##vso[task.setvariable variable=settingsJson;isOutput=true]$settingsJson"
        Write-Host "##vso[task.setvariable variable=protectedSettingsJson;isOutput=true;issecret=true]$protectedSettingsJson"
        Write-Host "##vso[task.setvariable variable=restApiPutBodyJson;isOutput=true;issecret=true]$restApiPutBodyJson"

  # - ${{ each vm in parameters.vmNames }}:
  #   - template: ./az-install-ext.yaml
  #     parameters:
  #       subscription: ${{ parameters.subscription }}
  #       rgName: ${{ parameters.vmRgName }}
  #       vmName: ${{ vm }}
  #       extName: "OmsAgentForLinux"
  #       extPublisher: "Microsoft.EnterpriseCloud.Monitoring"
  #       restApiPutBodyJson: $(omsSettings.restApiPutBodyJson)