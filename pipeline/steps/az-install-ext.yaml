parameters:
  - name: subscription
    type: string
  - name: rgName
    type: string
  - name: vmName
    type: string
  - name: extName
    type: string
  - name: extPublisher
    type: string
  - name: settingsJson
    type: string
    default: ""
  - name: protectedSettingsJson
    type: string
    default: ""
  - name: restApiPutBodyJson
    type: string
    default: ""

steps:
  - task: AzureCLI@2
    displayName: Install ${{ parameters.extName }} to ${{ parameters.vmName }}
    condition: always()
    continueOnError: true
    inputs:
      azureSubscription: ${{ parameters.subscription }}
      scriptType: pscore
      scriptLocation: inlineScript
      inlineScript: |
        $rgName="${{ parameters.rgName }}"
        $vmName="${{ parameters.vmName }}"
        $extName="${{ parameters.extName }}"
        $extPublisher="${{ parameters.extPublisher }}"
        $settingsJson='${{ parameters.settingsJson }}'
        $protectedSettingsJson='${{ parameters.protectedSettingsJson }}'
        $restBody = ${{ parameters.restApiPutBodyJson }}

        # $environmentObj = [PSCustomObject]@{
        #     "sbox" = "sandbox"
        #     "stg" = "staging"
        #     "prod" = "production"
        # }
        # $restApiPutBody = [PSCustomObject]@{
        #     "location" = "uksouth"
        #     "properties" = [PSCustomObject]@{
        #             publisher = 'Microsoft.Azure.NetworkWatcher'
        #             type = 'NetworkWatcherAgentLinux'
        #             typeHandlerVersion = '1.4'
        #             autoUpgradeMinorVersion = 'true'
        #     }
        #     "tags" = 
        #         [PSCustomObject]@{
        #             application  = 'Cloud'
        #             BuiltFrom    = 'hmcts/cvp-audio-ingress'
        #             BusinessArea = 'Cross-Cutting'
        #             environment  = 'sandbox'
        #             Platform     = ''
        #             Video        = ''
        #         }    
        # }
        # $temp = $restApiPutBody | ConvertTo-Json -Compress -Depth 100
        # $temp = $temp -replace "`"", "\`""


        if ($null -eq $settingsJson -or $settingsJson -eq ""){
          $settingsJson="{}"
        }
        if ($null -eq $protectedSettingsJson -or $protectedSettingsJson -eq ""){
          $protectedSettingsJson="{}"
        }
        if ($null -eq $restBody -or $restBody -eq ""){
          $restBody="{}"
        }
                      
        Try {
          
          $subscriptionId = az account show --query "id" -o tsv
          $restUri = -join("https://management.azure.com/subscriptions/$subscriptionId/resourceGroups/$rgName/providers/Microsoft.Compute/virtualMachines/$vmName/extensions/", "$extName", "?api-version=2021-11-01")
          Write-Host "restUri: $restUri"
          Write-Host "restBody: $restBody"
          Write-Host "Installing $extName from $extPublisher using REST API"
          az rest --method put --uri $restUri --body $restBody

        } Catch {
          Write-Host "Failed"
        }

        
