parameters:
  - name: subscriptionName
    type: string
  - name: env
    type: string
  - name: resourceGroupName
    type: string
  - name: nsgName
    type: string
  - name: nsgRuleName
    type: string
  - name: sourceAddressPrefixes
    type: string
    default: ''

steps:     
  - task: AzureCLI@2
    displayName: 'Clear ${{ parameters.nsgRuleName }} rule'
    inputs:
      azureSubscription: '${{ parameters.subscriptionName }}'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        nsgRule="${{ parameters.nsgRuleName }}"
        nsgName="${{ parameters.nsgName }}"
        rgName="${{ parameters.resourceGroupName }}"
        sourceAddressPrefixes="${{ parameters.sourceAddressPrefixes }}"

        nsg=$(az network nsg show -g $rgName -n $nsgName -o tsv --query "name")

        if [[ ! -z $nsg ]]
        then
          echo "Update $nsgName rule $nsgRule to $sourceAddressPrefixes"
          az network nsg rule update --name $nsgRule --nsg-name $nsgName --resource-group $rgName --source-address-prefixes $sourceAddressPrefixes
        else
          echo "NSG $nsgName in $rgName doesn't exist"
        fi
