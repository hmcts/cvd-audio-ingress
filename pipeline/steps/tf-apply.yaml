parameters:
  - name: subscriptionName
    type: string
  - name: env
    type: string
  - name: product
    type: string
    default: $(product)
  - name: locationEng
    type: string
    default: $(locationEng)
  - name: location
    type: string
    default: $(location)
  - name: wowza_sku
    type: string
    default: 'linux-paid-4-8'
  - name: wowza_version
    type: string
    default: '4.8.18'
  - name: wowza_publisher
    type: string
    default: 'wowza'
  - name: wowza_offer
    type: string
    default: 'wowzastreamingengine'
  - name: workingDirectory
    type: string
    default: $(system.defaultWorkingDirectory)

steps:

  
  - template: tf-init.yaml
    parameters:
      subscriptionName: ${{parameters.subscriptionName}}
      env: ${{parameters.env}}
      location: ${{parameters.location}}
      locationEng: ${{parameters.locationEng}}
      product: ${{parameters.product}}
      useBackend: true

  - task: DownloadPipelineArtifact@2
    displayName: Download Terraform Plan
    inputs:
      artifactName: ${{ parameters.env }}.tfplan
      targetPath: ${{ parameters.workingDirectory }}/terraform

  - bash: chmod a+x '${{ parameters.workingDirectory }}/terraform/${{ parameters.env }}.tfplan' && ls -ltra     
    displayName: 'Download Plan and change perms'

  - ${{ if eq( parameters.environment,'stg' ) }}:
    - template:  templates\Azure\Common\unlock-resource-group.yml@azTemplates
      parameters:
        subscriptionName:  ${{ parameters.subscription }}
        resourceGroupName: ${{ parameters.resourceGroup }}
        lockName: "${{ parameters.environment }}-lock"

  - task: TerraformCLI@0
    displayName: Apply
    inputs:
      command: 'apply'
      workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'
      environmentServiceName: ${{ parameters.subscriptionName }}
      commandOptions: '${{ parameters.env }}.tfplan -no-color'
       
  # - task: AzureCLI@2
  #   displayName: 'Enable Logging'
  #   inputs:
  #     azureSubscription: '${{ parameters.subscriptionName }}'
  #     scriptType: 'bash'
  #     scriptLocation: 'inlineScript'
  #     inlineScript: |
  #       rgName="cvp-recordings-$(env)-rg"

  #       az storage logging update \
  #       --log wrd \
  #       --retention 365 \
  #       --subscription ${{ parameters.subscriptionName }} \
  #       --account-name $rgName \
  #       --services b